name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: ["8.6.5", "8.8.4", "8.10.7", "9.0.2", "9.2.8", "9.4.8", "9.6.7", "9.8.4", "9.10.2"]
    env:
      TESTCONFIG: "--enable-tests"
      BENCHCONFIG: "--enable-tests"
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
      - run: cabal freeze $CONFIG
      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-
      - run: cabal build $CONFIG
      - run: cabal haddock $CONFIG
      - run: cabal sdist
      - run: cabal bench
      - run: cabal test

  wasm:
    runs-on: ubuntu-latest
    env:
      GHC_WASM_META_REV: 7927129e42bcd6a54b9e06e26455803fa4878261
    strategy:
      matrix:
        ghc: ['9.10', '9.12']
      fail-fast: false
    steps:
    - name: Setup wasm32-wasi-ghc
      run: |
        cd $(mktemp -d)
        curl -L https://gitlab.haskell.org/ghc/ghc-wasm-meta/-/archive/$GHC_WASM_META_REV/ghc-wasm-meta.tar.gz | tar xz --strip-components=1
        ./setup.sh
        ~/.ghc-wasm/add_to_github_path.sh
      env:
        FLAVOUR: ${{ matrix.ghc }}
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: |
          ~/.ghc-wasm/.cabal/store
        key: wasi-${{ runner.os }}-${{ env.GHC_WASM_META_REV }}-flavour-${{ matrix.ghc }}-${{ github.sha }}
        restore-keys: |
          wasi-${{ runner.os }}-${{ env.GHC_WASM_META_REV }}-flavour-${{ matrix.ghc }}-
    - name: Build
      run: |
        wasm32-wasi-cabal build --enable-tests --enable-benchmarks
    - name: Test
      run: |
        wasm32-wasi-cabal test --test-wrapper=wasmtime
